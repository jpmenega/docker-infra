===========================
sudo su
passwd

ip addr show
netplan apply (se precisar reaplicar o DHCP)

vi /etc/ssh/sshd_config (PermitRootLogin yes)
service sshd restart

**Acessar agora por SSH

*se precisar setar IP e Hostname
echo samba-ad-dc0? > /etc/hostname

nano /etc/default/grub
  GRUB_CMDLINE_LINUX="net.ifnames=0 biosdevname=0"

grub-mkconfig -o /boot/grub/grub.cfg

vi /etc/netplan/00-installer-config.yaml
-----
network:
  ethernets:
    eth0:
      addresses:
      - 192.168.1.x/24
      gateway4: 192.168.1.1
      nameservers:
        addresses:
        - 192.168.1.1
        search:
        - uz.intranet
  version: 2
-----
#vim.tiny /etc/network/interfaces
auto eth0
iface eth0 inet static
  address 192.168.16.241
  netmask 255.255.255.0
  gateway 192.168.16.1
  dns-nameservers 192.168.16.1
  mtu 9000

#vim.tiny /etc/resolv.conf
search medlav.intranet
nameserver 192.168.16.1
----
reboot
netplan apply (nao funcionaria pois alteramos o nome da NIC no GRUB)

apt install lvm2 drbd-utils
(debian)/lib/systemd/systemd-sysv-install enable drbd
(ubuntu)systemctl enable drbd.service

cfdisk /dev/vdb
pvcreate /dev/vdb1
vgcreate vg_drbd /dev/vdb1 //vgdisplay
lvcreate -l 100%FREE -c 64k --thinpool tpool_drbd vg_drbd
lvs (para mostrar tamanho alocado e usar na linha abaixo)

/etc/drbd.d/global_common.conf
        startup {
                wfc-timeout  15;
                degr-wfc-timeout 60;
        }
        net {
                cram-hmac-alg sha1;
                shared-secret "secret";
        }

/etc/drbd.d/postgres.res
resource postgres {
        on postgresql01 {
                volume 0 {
                        device /dev/drbd0;
                        disk /dev/vg_drbd/tpool_drbd;
                        meta-disk internal;
                }
                address 192.168.1.238:7788;
        }
        on postgresql02 {
                volume 0 {
                        device /dev/drbd0;
                        disk /dev/vg_drbd/tpool_drbd;
                        meta-disk internal;
                }
                address 192.168.1.239:7788;
        }
}

#ambos nodes
drbdadm create-md postgres
service drbd start

#node 1
drbdadm primary drbd --force

#node 2
drbdadm status
watch -n1 cat /proc/drbd

#node 1
mkfs.ext4 -v /dev/drbd0
drbdadm secondary drbd

systemctl disable pacemaker.service

-------
#split brain
na vitima:
drbdadm disconnect drbd
drbdadm secondary  drbd
drbdadm connect  --discard-my-data   drbd

no que vai assumir como principal:
drbdadm disconnect drbd
drbdadm connect drbd

-------
#zerar um node secundario para forcar um resync full
drbdadm down drbd
drbdadm wipe-md drbd
drdbadm create-md drbd
drbdadm up drbd
-------

-----
https://linbit.com/drbd-user-guide/drbd-guide-9_0-en/
9.3. Using automated LVM snapshots during DRBD synchronization
MTU 9000
------

*Primeiro node master e worker (necessario para copia das chaves do Corosync pela task de synchronize):
ssh-keygen
ssh-copy-id root@<demais_nodes_do_grupo_IP>

